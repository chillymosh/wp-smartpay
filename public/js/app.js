/******/ ;(function (modules) {
    // webpackBootstrap
    /******/ // The module cache
    /******/ var installedModules = {} // The require function
    /******/
    /******/ /******/ function __webpack_require__(moduleId) {
        /******/
        /******/ // Check if module is in cache
        /******/ if (installedModules[moduleId]) {
            /******/ return installedModules[moduleId].exports
            /******/
        } // Create a new module (and put it into the cache)
        /******/ /******/ var module = (installedModules[moduleId] = {
            /******/ i: moduleId,
            /******/ l: false,
            /******/ exports: {},
            /******/
        }) // Execute the module function
        /******/
        /******/ /******/ modules[moduleId].call(
            module.exports,
            module,
            module.exports,
            __webpack_require__
        ) // Flag the module as loaded
        /******/
        /******/ /******/ module.l = true // Return the exports of the module
        /******/
        /******/ /******/ return module.exports
        /******/
    } // expose the modules object (__webpack_modules__)
    /******/
    /******/
    /******/ /******/ __webpack_require__.m = modules // expose the module cache
    /******/
    /******/ /******/ __webpack_require__.c = installedModules // define getter function for harmony exports
    /******/
    /******/ /******/ __webpack_require__.d = function (exports, name, getter) {
        /******/ if (!__webpack_require__.o(exports, name)) {
            /******/ Object.defineProperty(exports, name, {
                enumerable: true,
                get: getter,
            })
            /******/
        }
        /******/
    } // define __esModule on exports
    /******/
    /******/ /******/ __webpack_require__.r = function (exports) {
        /******/ if (typeof Symbol !== 'undefined' && Symbol.toStringTag) {
            /******/ Object.defineProperty(exports, Symbol.toStringTag, {
                value: 'Module',
            })
            /******/
        }
        /******/ Object.defineProperty(exports, '__esModule', { value: true })
        /******/
    } // create a fake namespace object // mode & 1: value is a module id, require it // mode & 2: merge all properties of value into the ns // mode & 4: return value when already ns object // mode & 8|1: behave like require
    /******/
    /******/ /******/ /******/ /******/ /******/ /******/ __webpack_require__.t = function (
        value,
        mode
    ) {
        /******/ if (mode & 1) value = __webpack_require__(value)
        /******/ if (mode & 8) return value
        /******/ if (
            mode & 4 &&
            typeof value === 'object' &&
            value &&
            value.__esModule
        )
            return value
        /******/ var ns = Object.create(null)
        /******/ __webpack_require__.r(ns)
        /******/ Object.defineProperty(ns, 'default', {
            enumerable: true,
            value: value,
        })
        /******/ if (mode & 2 && typeof value != 'string')
            for (var key in value)
                __webpack_require__.d(
                    ns,
                    key,
                    function (key) {
                        return value[key]
                    }.bind(null, key)
                )
        /******/ return ns
        /******/
    } // getDefaultExport function for compatibility with non-harmony modules
    /******/
    /******/ /******/ __webpack_require__.n = function (module) {
        /******/ var getter =
            module && module.__esModule
                ? /******/ function getDefault() {
                      return module['default']
                  }
                : /******/ function getModuleExports() {
                      return module
                  }
        /******/ __webpack_require__.d(getter, 'a', getter)
        /******/ return getter
        /******/
    } // Object.prototype.hasOwnProperty.call
    /******/
    /******/ /******/ __webpack_require__.o = function (object, property) {
        return Object.prototype.hasOwnProperty.call(object, property)
    } // __webpack_public_path__
    /******/
    /******/ /******/ __webpack_require__.p = '/' // Load entry module and return exports
    /******/
    /******/
    /******/ /******/ return __webpack_require__((__webpack_require__.s = 0))
    /******/
})(
    /************************************************************************/
    /******/ {
        /***/ './resources/js/app.js':
            /*!*****************************!*\
  !*** ./resources/js/app.js ***!
  \*****************************/
            /*! no exports provided */
            /***/ function (module, __webpack_exports__, __webpack_require__) {
                'use strict'
                eval(
                    '__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _frontend_payment_payment_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./frontend/payment/payment.js */ "./resources/js/frontend/payment/payment.js");\n/* harmony import */ var _frontend_payment_payment_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_frontend_payment_payment_js__WEBPACK_IMPORTED_MODULE_0__);\nfunction _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }\n\nfunction _nonIterableRest() { throw new TypeError("Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nfunction _iterableToArrayLimit(arr, i) { if (typeof Symbol === "undefined" || !(Symbol.iterator in Object(arr))) return; var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"] != null) _i["return"](); } finally { if (_d) throw _e; } } return _arr; }\n\nfunction _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\n\njQuery(function ($) {\n  // SmartPayFormValidation\n  window.SmartPayFormValidator = function (data, rules) {\n    var _this = this;\n\n    /** Instance to self. **/\n    var self = this;\n    this.data = data;\n    this.rules = rules;\n\n    self.validate = function () {\n      return Object.entries(_this.rules).reduce(function (errors, _ref) {\n        var _ref2 = _slicedToArray(_ref, 2),\n            property = _ref2[0],\n            requirements = _ref2[1];\n\n        var itemErrors = []; // Check required validation\n\n        if (requirements.required) {\n          var errorMessage = _this.validateRequiredMessage(_this.data[property]);\n\n          if (errorMessage) itemErrors.push(errorMessage);\n        } // Check email validation\n\n\n        if (requirements.email) {\n          var _errorMessage = _this.validateEmailMessage(_this.data[property]);\n\n          if (_errorMessage) itemErrors.push(_errorMessage);\n        } // Check length validation\n\n\n        if (requirements.length) {\n          var _errorMessage2 = _this.validateLengthMessage(_this.data[property], requirements.length);\n\n          if (_errorMessage2) itemErrors.push(_errorMessage2);\n        } // Check value validation\n\n\n        if (requirements.value) {\n          var _errorMessage3 = _this.validateValueMessage(_this.data[property], requirements.value);\n\n          if (_errorMessage3) itemErrors.push(_errorMessage3);\n        }\n\n        if (itemErrors.length) {\n          errors[property] = itemErrors;\n        }\n\n        return errors;\n      }, {});\n    };\n\n    self.validateLengthMessage = function (value, length) {\n      if (value == null) return;\n\n      if (Array.isArray(length)) {\n        if (value.length >= length[0] && value.length <= length[1]) return;\n        return "must be between ".concat(length[0], " to ").concat(length[1], " character");\n      }\n\n      if (value.length >= length) return;\n      return "must be ".concat(length, " or more characters");\n    };\n\n    self.validateRequiredMessage = function (value) {\n      if (value) return;\n      return \'is required\';\n    };\n\n    self.validateEmailMessage = function (value) {\n      var emailFormat = /^([A-Za-z0-9_\\-\\.])+\\@([A-Za-z0-9_\\-\\.])+\\.([A-Za-z]{2,4})$/;\n      if (emailFormat.test(value)) return;\n      return \'is not a valid email\';\n    };\n\n    self.validateValueMessage = function (value, compareValue) {\n      if (value === compareValue) return;\n      return "must be same as ".concat(compareValue);\n    };\n  };\n\n  window.JSUcfirst = function (string) {\n    return string.charAt(0).toUpperCase() + string.slice(1);\n  };\n});\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./resources/js/app.js\n'
                )

                /***/
            },

        /***/ './resources/js/frontend/payment/payment.js':
            /*!**************************************************!*\
  !*** ./resources/js/frontend/payment/payment.js ***!
  \**************************************************/
<<<<<<< HEAD
            /*! no static exports found */
            /***/ function (module, exports) {
                eval(
                    "function _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }\n\nfunction _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nfunction _iterableToArrayLimit(arr, i) { if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return; var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"] != null) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; }\n\nfunction _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\n\njQuery(function ($) {\n  /** ============= Product ============= **/\n\n  /** Select product variation **/\n  $(document.body).on('click', '.smartpay-product-shortcode .product-variations .variation', function (e) {\n    $(e.currentTarget).parent().find('.variation').removeClass('selected');\n    $(e.currentTarget).addClass('selected');\n    $(e.currentTarget).parents('.smartpay-product-shortcode').find('input[name=\"smartpay_product_price\"]').val($(e.currentTarget).find('.sale-price').html());\n  });\n  /** Open product modal */\n\n  $(document.body).on('click', '.smartpay-product-shortcode button.open-product-modal', function (e) {\n    e.preventDefault();\n    var $productModal = $(e.currentTarget).parents('.smartpay-product-shortcode').find('.product-modal');\n    setTimeout(function () {\n      $productModal.modal('show'); // Appending modal background inside the .smartpay div\n\n      $('.modal-backdrop').last().appendTo($(e.currentTarget).closest('.smartpay'));\n    }, 500);\n  });\n  /** ============= Form ============= **/\n\n  /** Select form fixed amount **/\n\n  $(document.body).on('click', '.smartpay-form-shortcode .form-amounts .form--fixed-amount', function (e) {\n    // e.preventDefault()\n    // $(e.currentTarget)\n    //     .parents('.form-amounts')\n    //     .find('.amount')\n    //     .removeClass('selected')\n    // $(e.currentTarget).addClass('selected')\n    // Change the custom amount value on selecting form amount\n    var selectedAmount = $(e.currentTarget).find('input[name=\"_form_amount\"]').val();\n    $(e.currentTarget).parents('.form-amounts').find('.form--custom-amount').val(selectedAmount);\n  });\n  /** Select form custom amount **/\n  // $(document.body).on(\n  //     'focus',\n  //     '.smartpay-form-shortcode .form-amounts .form--custom-amount',\n  //     (e) => {\n  //         $(e.currentTarget)\n  //             .parents('.form-amounts')\n  //             .find('.amount')\n  //             .removeClass('selected')\n  //         $(e.currentTarget).addClass('selected')\n  //     }\n  // )\n\n  /** Open form modal */\n\n  $(document.body).on('click', '.smartpay-form-shortcode button.open-form-modal', function (e) {\n    e.preventDefault();\n    var $formModal = $(e.currentTarget).parents('.smartpay-form-shortcode').find('.form-modal');\n    setTimeout(function () {\n      // Show form modal\n      $formModal.modal('show'); // Appending modal background inside the .smartpay div\n\n      $('.modal-backdrop').last().appendTo($(e.currentTarget).closest('.smartpay'));\n    }, 500);\n  });\n  /** ============= Payment Modal ============= **/\n\n  /** Open payment form **/\n\n  $(document.body).on('click', '.smartpay-payment button.open-payment-form', function (e) {\n    e.preventDefault();\n    $parentWrapper = $(e.currentTarget).parents('.smartpay-payment');\n    var $paymentModal = $parentWrapper.find('.payment-modal');\n    var formData = getPaymentFormData($parentWrapper); // Set payment amount\n\n    var paymentAmount = 0;\n\n    if ('form_payment' === formData.smartpay_payment_type) {\n      var currencySymbol = $('#smartpay_currency_symbol').data('value');\n      paymentAmount = currencySymbol + formData.smartpay_amount;\n    } else {\n      paymentAmount = formData.smartpay_product_price;\n    }\n\n    $paymentModal.find('.amount').html(paymentAmount); // Reset payment modal\n\n    resetPaymentModal($paymentModal);\n    var buttonText = $(e.currentTarget).text();\n    $(e.currentTarget).text('Processing...').attr('disabled', 'disabled');\n    setTimeout(function () {\n      $paymentModal.modal('show'); // Appending modal background inside the .smartpay div\n\n      $('.modal-backdrop').last().appendTo($(e.currentTarget).closest('.smartpay-payment')); // Reset button\n\n      $(e.currentTarget).text(buttonText).removeAttr('disabled');\n    }, 500);\n  });\n  /** Back to payment modal first step **/\n\n  $(document.body).on('click', '.smartpay-payment button.back-to-first-step', function (e) {\n    e.preventDefault();\n    var $paymentModal = $(e.currentTarget).parents('.smartpay-payment').find('.payment-modal'); // Reset payment modal\n\n    resetPaymentModal($paymentModal);\n  });\n  /** Send ajax request to process payment **/\n\n  $(document.body).on('click', '.smartpay-payment button.smartpay-pay-now', function (e) {\n    e.preventDefault();\n    $parentWrapper = $(e.currentTarget).parents('.smartpay-payment');\n    var buttonText = $(e.currentTarget).text();\n    var $paymentFirstStep = $(e.currentTarget).parents('.step-1');\n    var $paymentSecondStep = $(e.currentTarget).parents('.modal-content').children('.step-2');\n    $(e.currentTarget).text('Processing...').attr('disabled', 'disabled');\n    $parentWrapper.find('.modal-loading').css('display', 'flex');\n    var formData = getPaymentFormData($parentWrapper);\n    var validation = checkPaymentFormValidation(formData); // Hide all errors\n\n    $parentWrapper.find('input').removeClass('is-invalid');\n    $paymentFirstStep.find('.payment-modal--errors').hide();\n\n    if (!validation.valid) {\n      showErrors($paymentFirstStep.find('.payment-modal--errors'), validation);\n      setTimeout(function () {\n        $parentWrapper.find('.modal-loading').css('display', 'none');\n      }, 300);\n    } else {\n      var data = {\n        action: 'smartpay_process_payment',\n        data: formData\n      };\n      jQuery.post(smartpay.ajax_url, data, function (response) {\n        // Show second step\n        $paymentSecondStep.css('display', 'flex');\n        $('.back-to-first-step').show(); // Hide first step\n\n        $paymentFirstStep.hide();\n        setTimeout(function () {\n          if (response) {\n            $paymentSecondStep.find('.dynamic-content').html(response);\n          } else {\n            $paymentSecondStep.find('.dynamic-content').html(\"<p class=\\\"text-danger\\\">Something wrong!</p>\");\n            console.error('Something wrong!');\n          }\n\n          $parentWrapper.find('.modal-loading').css('display', 'none');\n        }, 300);\n      });\n    }\n\n    $(e.currentTarget).text(buttonText).removeAttr('disabled');\n  });\n  /** Go to first step of payment **/\n\n  function resetPaymentModal($modal) {\n    $modal.find('.step-1').show();\n    $modal.find('.step-2').hide();\n    $('.back-to-first-step').hide();\n  }\n  /** Prepare payment data **/\n\n\n  function getPaymentFormData($wrapper) {\n    var index = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : '';\n    var data = {\n      smartpay_action: 'smartpay_process_payment',\n      smartpay_process_payment: $wrapper.find('input[name=\"smartpay_process_payment\"]').val() || null,\n      smartpay_gateway: $wrapper.find('input[name=\"smartpay_gateway\"]:checked').val() || null,\n      smartpay_first_name: $wrapper.find('input[name=\"smartpay_first_name\"]').val() || null,\n      smartpay_last_name: $wrapper.find('input[name=\"smartpay_last_name\"]').val() || null,\n      smartpay_email: $wrapper.find('input[name=\"smartpay_email\"]').val() || null,\n      smartpay_payment_type: $wrapper.find('input[name=\"smartpay_payment_type\"]').val() || null\n    };\n\n    if ('product_purchase' === data.smartpay_payment_type) {\n      data.smartpay_product_id = $wrapper.find('input[name=\"smartpay_product_id\"]').val() || null;\n      data.smartpay_product_price = $wrapper.find('input[name=\"smartpay_product_price\"]').val() || null;\n    } else {\n      data.smartpay_form_id = $wrapper.find('input[name=\"smartpay_form_id\"]').val() || null;\n      data.smartpay_amount = $wrapper.find('input[name=\"smartpay_amount\"]').val() || null;\n    }\n\n    if (index) {\n      return data.index || null;\n    }\n\n    return data;\n  }\n  /** Close payment payment modal **/\n\n\n  $(document.body).on('click', '.smartpay-payment button.modal-close', function (e) {\n    var $paymentModal = $(e.currentTarget).parents('.smartpay-payment').find('.payment-modal'); // Show payment modal\n\n    $paymentModal.modal('hide');\n  });\n  /** Handle payment modal open event **/\n\n  $(document.body).on('show.bs.modal', '.payment-modal', function (e) {\n    document.body.style.overflow = 'hidden';\n  });\n  /** Handle payment modal close event **/\n\n  $(document.body).on('hidden.bs.modal', '.payment-modal', function (e) {\n    document.body.style.overflow = 'auto';\n  });\n\n  function checkPaymentFormValidation(data) {\n    var rules = {\n      smartpay_action: {\n        required: true,\n        value: 'smartpay_process_payment'\n      },\n      smartpay_process_payment: {\n        required: true\n      },\n      smartpay_gateway: {\n        required: true\n      },\n      smartpay_first_name: {\n        required: true\n      },\n      smartpay_last_name: {\n        required: true\n      },\n      smartpay_email: {\n        required: true,\n        email: true\n      },\n      smartpay_payment_type: {\n        required: true\n      }\n    };\n    var validator = new SmartPayFormValidator(data, rules);\n    var errors = validator.validate();\n    return {\n      valid: Object.values(errors).every(function (messages) {\n        return messages.length === 0;\n      }),\n      errors: errors\n    };\n  }\n\n  function showErrors($wrapper, validation) {\n    var $parentWrapper = $wrapper.parents('.smartpay-payment');\n    var errorHTML = [];\n    Object.entries(validation.errors).forEach(function (_ref) {\n      var _ref2 = _slicedToArray(_ref, 2),\n          property = _ref2[0],\n          messages = _ref2[1];\n\n      $parentWrapper.find('input[name=\"' + property + '\"]').addClass('is-invalid');\n      var fieldName = JSUcfirst(property.split('_').slice(1).join(' ')); // messages.forEach((message) => {\n\n      errorHTML.push(\"\\n                <div class=\\\"alert alert-danger\\\">\\n                    <p class=\\\"m-0 form-error-text\\\">\".concat(fieldName, \" \").concat(messages[0], \"</p>\\n                </div>\")); // })\n    });\n    if (!errorHTML.length) return;\n    $wrapper.show();\n    $wrapper.html(errorHTML);\n  }\n});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./resources/js/frontend/payment/payment.js\n"
                )
=======
/*! no static exports found */
/***/ (function(module, exports) {

eval("function _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }\n\nfunction _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nfunction _iterableToArrayLimit(arr, i) { if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return; var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"] != null) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; }\n\nfunction _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\n\njQuery(function ($) {\n  /** ============= Product ============= **/\n\n  /** Select product variation **/\n  $(document.body).on('click', '.smartpay-product-shortcode .product-variations .variation', function (e) {\n    $(e.currentTarget).parent().find('.variation').removeClass('selected');\n    $(e.currentTarget).addClass('selected');\n    $(e.currentTarget).parents('.smartpay-product-shortcode').find('input[name=\"smartpay_product_price\"]').val($(e.currentTarget).find('.sale-price').html());\n  });\n  /** Open product modal */\n\n  $(document.body).on('click', '.smartpay-product-shortcode button.open-product-modal', function (e) {\n    e.preventDefault();\n    var $productModal = $(e.currentTarget).parents('.smartpay-product-shortcode').find('.product-modal');\n    setTimeout(function () {\n      $productModal.modal('show'); // Appending modal background inside the .smartpay div\n\n      $('.modal-backdrop').last().appendTo($(e.currentTarget).closest('.smartpay'));\n    }, 500);\n  });\n  /** ============= Form ============= **/\n\n  /** Select form fixed amount **/\n\n  $(document.body).on('click', '.smartpay-form-shortcode .form-amounts .form--fixed-amount', function (e) {\n    // e.preventDefault()\n    // $(e.currentTarget)\n    //     .parents('.form-amounts')\n    //     .find('.amount')\n    //     .removeClass('selected')\n    // $(e.currentTarget).addClass('selected')\n    // Change the custom amount value on selecting form amount\n    var selectedAmount = $(e.currentTarget).find('input[name=\"_form_amount\"]').val();\n    $(e.currentTarget).parents('.form-amounts').find('.form--custom-amount').val(selectedAmount);\n  });\n  /** Select form custom amount **/\n  // $(document.body).on(\n  //     'focus',\n  //     '.smartpay-form-shortcode .form-amounts .form--custom-amount',\n  //     (e) => {\n  //         $(e.currentTarget)\n  //             .parents('.form-amounts')\n  //             .find('.amount')\n  //             .removeClass('selected')\n  //         $(e.currentTarget).addClass('selected')\n  //     }\n  // )\n\n  /** Open form modal */\n\n  $(document.body).on('click', '.smartpay-form-shortcode button.open-form-modal', function (e) {\n    e.preventDefault();\n    var $formModal = $(e.currentTarget).parents('.smartpay-form-shortcode').find('.form-modal');\n    setTimeout(function () {\n      // Show form modal\n      $formModal.modal('show'); // Appending modal background inside the .smartpay div\n\n      $('.modal-backdrop').last().appendTo($(e.currentTarget).closest('.smartpay'));\n    }, 500);\n  });\n  /** ============= Payment Modal ============= **/\n\n  /** Open payment form **/\n\n  $(document.body).on('click', '.smartpay-payment button.open-payment-form', function (e) {\n    e.preventDefault();\n    $parentWrapper = $(e.currentTarget).parents('.smartpay-payment');\n    var $paymentModal = $parentWrapper.find('.payment-modal');\n    var formData = getPaymentFormData($parentWrapper); // Set payment amount\n\n    var paymentAmount = 0;\n\n    if ('form_payment' === formData.smartpay_payment_type) {\n      var currencySymbol = $('#smartpay_currency_symbol').data('value');\n      paymentAmount = currencySymbol + formData.smartpay_amount;\n    } else {\n      paymentAmount = formData.smartpay_product_price;\n    }\n\n    $paymentModal.find('.amount').html(paymentAmount); // Reset payment modal\n\n    resetPaymentModal($paymentModal);\n    var buttonText = $(e.currentTarget).text();\n    $(e.currentTarget).text('Processing...').attr('disabled', 'disabled');\n    setTimeout(function () {\n      $paymentModal.modal('show');\n\n      if (formData.smartpay_first_name) {\n        $paymentModal.find('input[name=\"smartpay_first_name\"]').val(formData.smartpay_first_name);\n      }\n\n      if (formData.smartpay_last_name) {\n        $paymentModal.find('input[name=\"smartpay_last_name\"]').val(formData.smartpay_last_name);\n      }\n\n      if (formData.smartpay_email) {\n        $paymentModal.find('input[name=\"smartpay_email\"]').val(formData.smartpay_email);\n      } // Appending modal background inside the .smartpay div\n\n\n      $('.modal-backdrop').last().appendTo($(e.currentTarget).closest('.smartpay-payment')); // Reset button\n\n      $(e.currentTarget).text(buttonText).removeAttr('disabled');\n    }, 500);\n  });\n  /** Back to payment modal first step **/\n\n  $(document.body).on('click', '.smartpay-payment button.back-to-first-step', function (e) {\n    e.preventDefault();\n    var $paymentModal = $(e.currentTarget).parents('.smartpay-payment').find('.payment-modal'); // Reset payment modal\n\n    resetPaymentModal($paymentModal);\n  });\n  /** Send ajax request to process payment **/\n\n  $(document.body).on('click', '.smartpay-payment button.smartpay-pay-now', function (e) {\n    e.preventDefault();\n    $parentWrapper = $(e.currentTarget).parents('.smartpay-payment');\n    var buttonText = $(e.currentTarget).text();\n    var $paymentFirstStep = $(e.currentTarget).parents('.step-1');\n    var $paymentSecondStep = $(e.currentTarget).parents('.modal-content').children('.step-2');\n    $(e.currentTarget).text('Processing...').attr('disabled', 'disabled');\n    $parentWrapper.find('.modal-loading').css('display', 'flex');\n    var formData = getPaymentFormData($parentWrapper);\n    var validation = checkPaymentFormValidation(formData); // Hide all errors\n\n    $parentWrapper.find('input').removeClass('is-invalid');\n    $paymentFirstStep.find('.payment-modal--errors').hide();\n\n    if (!validation.valid) {\n      showErrors($paymentFirstStep.find('.payment-modal--errors'), validation);\n      setTimeout(function () {\n        $parentWrapper.find('.modal-loading').css('display', 'none');\n      }, 300);\n    } else {\n      var data = {\n        action: 'smartpay_process_payment',\n        data: formData\n      };\n      jQuery.post(smartpay.ajax_url, data, function (response) {\n        // Show second step\n        $paymentSecondStep.css('display', 'flex');\n        $('.back-to-first-step').show(); // Hide first step\n\n        $paymentFirstStep.hide();\n        setTimeout(function () {\n          if (response) {\n            $paymentSecondStep.find('.dynamic-content').html(response);\n          } else {\n            $paymentSecondStep.find('.dynamic-content').html(\"<p class=\\\"text-danger\\\">Something wrong!</p>\");\n            console.error('Something wrong!');\n          }\n\n          $parentWrapper.find('.modal-loading').css('display', 'none');\n        }, 300);\n      });\n    }\n\n    $(e.currentTarget).text(buttonText).removeAttr('disabled');\n  });\n  /** Go to first step of payment **/\n\n  function resetPaymentModal($modal) {\n    $modal.find('.step-1').show();\n    $modal.find('.step-2').hide();\n    $('.back-to-first-step').hide();\n  }\n  /** Prepare payment data **/\n\n\n  function getPaymentFormData($wrapper) {\n    var index = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : '';\n    var smartpay_form_extra_data = {};\n\n    if ($wrapper.find('.smartpay_form_builder_wrapper > form input[name^=\"smartpay_\"]').length) {\n      $wrapper.find('.smartpay_form_builder_wrapper > form input[name^=\"smartpay_\"]').each(function (index, item) {\n        smartpay_form_extra_data[$(item).attr('name')] = $(item).val();\n      });\n    }\n\n    var data = {\n      smartpay_action: 'smartpay_process_payment',\n      smartpay_process_payment: $wrapper.find('input[name=\"smartpay_process_payment\"]').val() || null,\n      smartpay_gateway: $wrapper.find('input[name=\"smartpay_gateway\"]:checked').val() || null,\n      smartpay_first_name: $wrapper.find('input[name=\"smartpay_first_name\"]').val() || null,\n      smartpay_last_name: $wrapper.find('input[name=\"smartpay_last_name\"]').val() || null,\n      smartpay_email: $wrapper.find('input[name=\"smartpay_email\"]').val() || null,\n      smartpay_payment_type: $wrapper.find('input[name=\"smartpay_payment_type\"]').val() || null,\n      smartpay_form_extra_data: smartpay_form_extra_data || null\n    };\n\n    if ('product_purchase' === data.smartpay_payment_type) {\n      data.smartpay_product_id = $wrapper.find('input[name=\"smartpay_product_id\"]').val() || null;\n      data.smartpay_product_price = $wrapper.find('input[name=\"smartpay_product_price\"]').val() || null;\n    } else {\n      data.smartpay_form_id = $wrapper.find('input[name=\"smartpay_form_id\"]').val() || null;\n      data.smartpay_amount = $wrapper.find('input[name=\"smartpay_amount\"]').val() || null;\n    }\n\n    if (index) {\n      return data.index || null;\n    }\n\n    return data;\n  }\n  /** Close payment payment modal **/\n\n\n  $(document.body).on('click', '.smartpay-payment button.modal-close', function (e) {\n    var $paymentModal = $(e.currentTarget).parents('.smartpay-payment').find('.payment-modal'); // Show payment modal\n\n    $paymentModal.modal('hide');\n  });\n  /** Handle payment modal open event **/\n\n  $(document.body).on('show.bs.modal', '.payment-modal', function (e) {\n    document.body.style.overflow = 'hidden';\n  });\n  /** Handle payment modal close event **/\n\n  $(document.body).on('hidden.bs.modal', '.payment-modal', function (e) {\n    document.body.style.overflow = 'auto';\n  });\n\n  function checkPaymentFormValidation(data) {\n    var rules = {\n      smartpay_action: {\n        required: true,\n        value: 'smartpay_process_payment'\n      },\n      smartpay_process_payment: {\n        required: true\n      },\n      smartpay_gateway: {\n        required: true\n      },\n      smartpay_first_name: {\n        required: true\n      },\n      smartpay_last_name: {\n        required: true\n      },\n      smartpay_email: {\n        required: true,\n        email: true\n      },\n      smartpay_payment_type: {\n        required: true\n      }\n    };\n    var validator = new SmartPayFormValidator(data, rules);\n    var errors = validator.validate();\n    return {\n      valid: Object.values(errors).every(function (messages) {\n        return messages.length === 0;\n      }),\n      errors: errors\n    };\n  }\n\n  function showErrors($wrapper, validation) {\n    var $parentWrapper = $wrapper.parents('.smartpay-payment');\n    var errorHTML = [];\n    Object.entries(validation.errors).forEach(function (_ref) {\n      var _ref2 = _slicedToArray(_ref, 2),\n          property = _ref2[0],\n          messages = _ref2[1];\n\n      $parentWrapper.find('input[name=\"' + property + '\"]').addClass('is-invalid');\n      var fieldName = JSUcfirst(property.split('_').slice(1).join(' ')); // messages.forEach((message) => {\n\n      errorHTML.push(\"\\n                <div class=\\\"alert alert-danger\\\">\\n                    <p class=\\\"m-0 form-error-text\\\">\".concat(fieldName, \" \").concat(messages[0], \"</p>\\n                </div>\")); // })\n    });\n    if (!errorHTML.length) return;\n    $wrapper.show();\n    $wrapper.html(errorHTML);\n  }\n});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./resources/js/frontend/payment/payment.js\n");
>>>>>>> origin/framework

                /***/
            },

        /***/ './resources/sass/admin.scss':
            /*!***********************************!*\
  !*** ./resources/sass/admin.scss ***!
  \***********************************/
            /*! no static exports found */
            /***/ function (module, exports) {
                eval(
                    '// removed by extract-text-webpack-plugin//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9yZXNvdXJjZXMvc2Fzcy9hZG1pbi5zY3NzP2EzN2EiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEiLCJmaWxlIjoiLi9yZXNvdXJjZXMvc2Fzcy9hZG1pbi5zY3NzLmpzIiwic291cmNlc0NvbnRlbnQiOlsiLy8gcmVtb3ZlZCBieSBleHRyYWN0LXRleHQtd2VicGFjay1wbHVnaW4iXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./resources/sass/admin.scss\n'
                )

                /***/
            },

        /***/ './resources/sass/app.scss':
            /*!*********************************!*\
  !*** ./resources/sass/app.scss ***!
  \*********************************/
            /*! no static exports found */
            /***/ function (module, exports) {
                eval(
                    '// removed by extract-text-webpack-plugin//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9yZXNvdXJjZXMvc2Fzcy9hcHAuc2Nzcz8wZTE1Il0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBIiwiZmlsZSI6Ii4vcmVzb3VyY2VzL3Nhc3MvYXBwLnNjc3MuanMiLCJzb3VyY2VzQ29udGVudCI6WyIvLyByZW1vdmVkIGJ5IGV4dHJhY3QtdGV4dC13ZWJwYWNrLXBsdWdpbiJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./resources/sass/app.scss\n'
                )

                /***/
            },

        /***/ 0:
            /*!*****************************************************************************************!*\
  !*** multi ./resources/js/app.js ./resources/sass/app.scss ./resources/sass/admin.scss ***!
  \*****************************************************************************************/
            /*! no static exports found */
            /***/ function (module, exports, __webpack_require__) {
                __webpack_require__(
                    /*! /home/alamin/www/smartpay/wp-content/plugins/smartpay/resources/js/app.js */ './resources/js/app.js'
                )
                __webpack_require__(
                    /*! /home/alamin/www/smartpay/wp-content/plugins/smartpay/resources/sass/app.scss */ './resources/sass/app.scss'
                )
                module.exports = __webpack_require__(
                    /*! /home/alamin/www/smartpay/wp-content/plugins/smartpay/resources/sass/admin.scss */ './resources/sass/admin.scss'
                )

                /***/
            },

        /******/
    }
)
