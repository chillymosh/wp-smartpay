/*!***********************************************************************************************************************************************************************************************************************************************************!*\
  !*** css ./node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[3].use[1]!./node_modules/postcss-loader/dist/cjs.js??ruleSet[1].rules[3].use[2]!./node_modules/sass-loader/dist/cjs.js??ruleSet[1].rules[3].use[3]!./resources/form-builder/styles.scss ***!
  \***********************************************************************************************************************************************************************************************************************************************************/
/**
*  Converts a hex value into the rgb equivalent.
*
* @param {string} hex - the hexadecimal value to convert
* @return {string} comma separated rgb values
*/
/**
 * Colors
 */
/**
 * SCSS Variables.
 *
 * Please use variables from this sheet to ensure consistency across the UI.
 * Don't add to this sheet unless you're pretty sure the value will be reused in many places.
 * For example, don't add rules to this sheet that affect block visuals. It's purely for UI.
 */
/**
*  Converts a hex value into the rgb equivalent.
*
* @param {string} hex - the hexadecimal value to convert
* @return {string} comma separated rgb values
*/
/**
 * Colors
 */
/**
 * Fonts & basic variables.
 */
/**
 * Grid System.
 * https://make.wordpress.org/design/2019/10/31/proposal-a-consistent-spacing-system-for-wordpress/
 */
/**
 * Dimensions.
 */
/**
 * Shadows.
 */
/**
 * Editor widths.
 */
/**
 * Block & Editor UI.
 */
/**
 * Block paddings.
 */
/**
 * React Native specific.
 * These variables do not appear to be used anywhere else.
 */
/**
*  Converts a hex value into the rgb equivalent.
*
* @param {string} hex - the hexadecimal value to convert
* @return {string} comma separated rgb values
*/
/**
 * Long content fade mixin
 *
 * Creates a fading overlay to signify that the content is longer
 * than the space allows.
 */
/**
 * Breakpoint mixins
 */
/**
 * Focus styles.
 */
/**
 * Applies editor left position to the selector passed as argument
 */
/**
 * Styles that are reused verbatim in a few places
 */
/**
 * Allows users to opt-out of animations via OS-level preferences.
 */
/**
 * Reset default styles for JavaScript UI based pages.
 * This is a WP-admin agnostic reset
 */
/**
 * Reset the WP Admin page styles for Gutenberg-like pages.
 */
/**
 * Breakpoints & Media Queries
 */
.smartpay-block-editor-sidebar {
  background: #fff;
  color: #1e1e1e;
  height: 100vh;
  overflow: hidden;
  margin-left: 15px;
  z-index: 90;
}
@media (min-width: 600px) {
  .smartpay-block-editor-sidebar {
    -webkit-overflow-scrolling: touch;
    height: auto;
    overflow: auto;
  }
}
@media (min-width: 600px) {
  .smartpay-block-editor-sidebar {
    display: block;
  }
}
.smartpay-block-editor-sidebar > .components-panel {
  border-color: #ced4da;
}
.smartpay-block-editor-sidebar > .components-panel > .components-panel__header {
  background: #e0e0e0;
}
.smartpay-block-editor-sidebar .block-editor-block-inspector__card {
  margin: 0;
}

.smartpay-block-editor__block-list {
  margin: 0 20px;
}
.smartpay-block-editor__block-list .block-editor-block-list__block {
  margin-left: auto;
  margin-right: auto;
}

html.wp-toolbar {
  background: #fff;
}

body.block-editor-page {
  background: #fff;
  /* We hide legacy notices in Gutenberg Based Pages, because they were not designed in a way that scaled well.
     Plugins can use Gutenberg notices if they need to pass on information to the user when they are editing. */
}
body.block-editor-page #wpcontent {
  padding-left: 0;
}
body.block-editor-page #wpbody-content {
  padding-bottom: 0;
}
body.block-editor-page #wpbody-content > div:not(.block-editor):not(#screen-meta) {
  display: none;
}
body.block-editor-page #wpfooter {
  display: none;
}
body.block-editor-page .a11y-speak-region {
  left: -1px;
  top: -1px;
}
body.block-editor-page ul#adminmenu a.wp-has-current-submenu::after,
body.block-editor-page ul#adminmenu > li.current > a.current::after {
  border-right-color: #fff;
}
body.block-editor-page .media-frame select.attachment-filters:last-of-type {
  width: auto;
  max-width: 100%;
}

.smartpay-block-editor {
  min-height: 40vh;
}

.editor-styles-wrapper {
  width: 100%;
  font-family: Menlo, Consolas, monaco, monospace;
  font-size: 16px;
  line-height: 1.8;
  color: #1e1e1e;
  @import '~@wordpress/block-library/build-style/style.css';
}
.smartpay-block-editor,
.components-modal__frame {
  box-sizing: border-box;
}
.smartpay-block-editor *,
.smartpay-block-editor *::before,
.smartpay-block-editor *::after,
.components-modal__frame *,
.components-modal__frame *::before,
.components-modal__frame *::after {
  box-sizing: inherit;
}

.interface-interface-skeleton {
  position: absolute;
  top: 8px;
  bottom: 0;
  left: 0 !important;
  right: 0;
}
.interface-interface-skeleton__content {
  width: 70%;
}
.interface-interface-skeleton__sidebar {
  width: 30%;
  box-shadow: none;
  border: none;
}

/*# sourceMappingURL=index.css.map*/